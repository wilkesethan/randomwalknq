import pandas as pd
data = pd.read_excel('NQ_30min_continuous_adjusted.xlsx', header=None)
data.columns = ['Datetime', 'Open', 'High', 'Low', 'Close', 'Volume']
data['Datetime'] = pd.to_datetime(data['Datetime'])
data = data.sort_values(by='Datetime')
close_prices = data['Close']

import numpy as np
log_returns = np.log(close_prices / close_prices.shift(1)).dropna()

num_simulations = 10  # Number of simulations
num_days = 252  # Number of days to simulate (1 year of trading days)
volatility = log_returns.std()
np.random.seed(42)  # For reproducibility
simulations = np.zeros((num_days, num_simulations))
last_price = close_prices.iloc[-1]

for i in range(num_simulations):
    random_walk = np.random.normal(0, volatility, num_days)
    price_path = last_price * np.exp(np.cumsum(random_walk))
    simulations[:, i] = price_path

import matplotlib.pyplot as plt
simulations_df = pd.DataFrame(simulations)
plt.figure(figsize=(12, 6))
plt.plot(simulations_df)
plt.title('Simulated Stock Price Movements Using Random Walk')
plt.xlabel('Days')
plt.ylabel('Price')
plt.show()
